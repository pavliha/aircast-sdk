syntax = "proto3";

package aircast.protocol;

option go_package = "github.com/pavliha/aircast-protocol/gen/go";

import "proto/common.proto";

// Main message wrapper that encapsulates all possible messages
message Message {
  // Standard message envelope
  string message_id = 1;        // Unique identifier for this message
  string correlation_id = 2;    // For response correlation with request
  string protocol_version = 3;  // Version of the protocol (e.g., "1.0")
  int64 timestamp = 4;          // Unix timestamp in milliseconds

  // The actual message content - only one will be set
  oneof content {
    // Device events and responses
    DeviceModemConnected device_modem_connected = 10;
    DeviceModemInfo device_modem_info = 11;
    DeviceModemSignalQuality device_modem_signal_quality = 12;
    DeviceModemConnectionError device_modem_connection_error = 13;
    DeviceModemInfoResponse device_modem_info_response = 14;

    DeviceRtspConnected device_rtsp_connected = 20;
    DeviceRtspStreamReady device_rtsp_stream_ready = 21;
    DeviceRtspError device_rtsp_error = 22;
    DeviceRtspDialError device_rtsp_dial_error = 23;
    DeviceRtspDescribeError device_rtsp_describe_error = 24;
    DeviceRtspPublishError device_rtsp_publish_error = 25;
    DeviceRtspPacketLost device_rtsp_packet_lost = 26;
    DeviceRtspDecodeError device_rtsp_decode_error = 27;
    DeviceRtspListenError device_rtsp_listen_error = 28;
    DeviceRtspClientError device_rtsp_client_error = 29;
    DeviceRtspDisconnected device_rtsp_disconnected = 30;
    DeviceRtspConnectFailed device_rtsp_connect_failed = 31;
    DeviceRtspRedialError device_rtsp_redial_error = 32;

    DeviceMavlinkConnected device_mavlink_connected = 40;
    DeviceMavlinkDialError device_mavlink_dial_error = 41;

    DeviceWebrtcSessionStarted device_webrtc_session_started = 50;
    DeviceWebrtcOffer device_webrtc_offer = 51;
    DeviceWebrtcAnswer device_webrtc_answer = 52;
    DeviceWebrtcIceCandidate device_webrtc_ice_candidate = 53;
    DeviceWebrtcPeerConnected device_webrtc_peer_connected = 54;
    DeviceWebrtcPeerDisconnected device_webrtc_peer_disconnected = 55;
    DeviceWebrtcIceConnected device_webrtc_ice_connected = 56;
    DeviceWebrtcIceDisconnected device_webrtc_ice_disconnected = 57;
    DeviceWebrtcOfferAck device_webrtc_offer_ack = 58;
    DeviceWebrtcAnswerAck device_webrtc_answer_ack = 59;
    DeviceWebrtcIceCandidateAck device_webrtc_ice_candidate_ack = 60;
    DeviceWebrtcError device_webrtc_error = 61;
    DeviceWebrtcOfferError device_webrtc_offer_error = 62;
    DeviceWebrtcSessionStopWarning device_webrtc_session_stop_warning = 63;
    DeviceWebrtcPeerConnecting device_webrtc_peer_connecting = 64;
    DeviceWebrtcDataChannelOpen device_webrtc_data_channel_open = 65;

    DeviceCameraListResponse device_camera_list_response = 70;
    DeviceCameraListError device_camera_list_error = 71;
    DeviceCameraAddSuccess device_camera_add_success = 72;
    DeviceCameraAddError device_camera_add_error = 73;
    DeviceCameraUpdateSuccess device_camera_update_success = 74;
    DeviceCameraUpdateError device_camera_update_error = 75;
    DeviceCameraRemoveSuccess device_camera_remove_success = 76;
    DeviceCameraRemoveError device_camera_remove_error = 77;
    DeviceCameraSwitchSuccess device_camera_switch_success = 78;
    DeviceCameraSwitchError device_camera_switch_error = 79;
    DeviceCameraSelectedResponse device_camera_selected_response = 80;
    DeviceCameraSelectedError device_camera_selected_error = 81;

    DeviceNetworkInterfacesResponse device_network_interfaces_response = 90;
    DeviceStatusResponse device_status_response = 91;

    // API events
    ApiDeviceConnected api_device_connected = 100;
    ApiDeviceDisconnected api_device_disconnected = 101;

    // Client requests
    ClientRtspDial client_rtsp_dial = 200;
    ClientNetworkInterfacesRequest client_network_interfaces_request = 201;
    ClientCameraListRequest client_camera_list_request = 202;
    ClientCameraAdd client_camera_add = 203;
    ClientCameraUpdate client_camera_update = 204;
    ClientCameraRemove client_camera_remove = 205;
    ClientCameraSwitch client_camera_switch = 206;
    ClientCameraSelectedRequest client_camera_selected_request = 207;
    ClientWebrtcSessionStart client_webrtc_session_start = 208;
    ClientWebrtcOffer client_webrtc_offer = 209;
    ClientWebrtcAnswer client_webrtc_answer = 210;
    ClientWebrtcIceCandidate client_webrtc_ice_candidate = 211;
    ClientDeviceReboot client_device_reboot = 212;
    ClientStatusRequest client_status_request = 213;
    ClientModemInfoRequest client_modem_info_request = 214;

    // Generic error message
    Error error = 999;
  }
}

// Device modem messages
message DeviceModemConnected {
  string status = 1;
}

message DeviceModemInfo {
  aircast.protocol.common.Event event = 1;
  aircast.protocol.common.SignalQuality signal_quality = 2;
}

message DeviceModemSignalQuality {
  aircast.protocol.common.Event event = 1;
  aircast.protocol.common.SignalQuality signal_quality = 2;
}

message DeviceModemConnectionError {
  string error = 1;
}

message DeviceModemInfoResponse {
  string status = 1;
  string model = 2;
  string manufacturer = 3;
  string imei = 4;
  aircast.protocol.common.SignalQuality signal_quality = 5;
}

// Device RTSP messages
message DeviceRtspConnected {
  string status = 1;
}

message DeviceRtspStreamReady {
  string status = 1;
}

message DeviceRtspError {
  string error = 1;
}

message DeviceRtspDialError {
  string error = 1;
}

message DeviceRtspDescribeError {
  string error = 1;
}

message DeviceRtspPublishError {
  string error = 1;
}

message DeviceRtspPacketLost {
  string details = 1;
}

message DeviceRtspDecodeError {
  string error = 1;
}

message DeviceRtspListenError {
  string error = 1;
}

message DeviceRtspClientError {
  string error = 1;
}

message DeviceRtspDisconnected {
  string reason = 1;
}

message DeviceRtspConnectFailed {
  string error = 1;
}

message DeviceRtspRedialError {
  string error = 1;
}

// Device Mavlink messages
message DeviceMavlinkConnected {
  string status = 1;
}

message DeviceMavlinkDialError {
  string error = 1;
}

// Device WebRTC messages
message DeviceWebrtcSessionStarted {
  // Empty message, just an acknowledgment
}

message DeviceWebrtcOffer {
  string sdp = 1;
}

message DeviceWebrtcAnswer {
  string sdp = 1;
}

message DeviceWebrtcIceCandidate {
  string candidate = 1;
  string sdp_mid = 2;
  int32 sdp_m_line_index = 3;
  string username_fragment = 4;
}

message DeviceWebrtcPeerConnected {
  // Empty message, just an acknowledgment
}

message DeviceWebrtcPeerDisconnected {
  string reason = 1;
}

message DeviceWebrtcIceConnected {
  // Empty message, just an acknowledgment
}

message DeviceWebrtcIceDisconnected {
  string reason = 1;
}

message DeviceWebrtcOfferAck {
  // Empty message, just an acknowledgment
}

message DeviceWebrtcAnswerAck {
  // Empty message, just an acknowledgment
}

message DeviceWebrtcIceCandidateAck {
  // Empty message, just an acknowledgment
}

message DeviceWebrtcError {
  string error = 1;
}

message DeviceWebrtcOfferError {
  string error = 1;
}

message DeviceWebrtcSessionStopWarning {
  string reason = 1;
}

message DeviceWebrtcPeerConnecting {
  string status = 1;
}

message DeviceWebrtcDataChannelOpen {
  string channel_id = 1;
}

// Device Camera messages
message DeviceCameraListResponse {
  repeated aircast.protocol.common.Camera cameras = 1;
}

message DeviceCameraListError {
  string error = 1;
}

message DeviceCameraAddSuccess {
  aircast.protocol.common.Camera camera = 1;
}

message DeviceCameraAddError {
  string error = 1;
}

message DeviceCameraUpdateSuccess {
  aircast.protocol.common.Camera camera = 1;
}

message DeviceCameraUpdateError {
  string error = 1;
}

message DeviceCameraRemoveSuccess {
  string camera_id = 1;
}

message DeviceCameraRemoveError {
  string error = 1;
}

message DeviceCameraSwitchSuccess {
  string camera_id = 1;
}

message DeviceCameraSwitchError {
  string error = 1;
}

message DeviceCameraSelectedResponse {
  aircast.protocol.common.Camera camera = 1;
}

message DeviceCameraSelectedError {
  string error = 1;
}

// Device other responses
message DeviceNetworkInterfacesResponse {
  repeated aircast.protocol.common.InterfaceInfo interfaces = 1;
}

message DeviceStatusResponse {
  aircast.protocol.common.ServiceStatus status = 1;
}

// API messages
message ApiDeviceConnected {
  string device_id = 1;
}

message ApiDeviceDisconnected {
  string device_id = 1;
  string reason = 2;
}

// Client requests
message ClientRtspDial {
  string url = 1;
}

message ClientNetworkInterfacesRequest {
  // Empty message, just a request
}

message ClientCameraListRequest {
  // Empty message, just a request
}

message ClientCameraAdd {
  string name = 1;
  string rtsp_url = 2;
  string network_interface = 3;
}

message ClientCameraUpdate {
  aircast.protocol.common.Camera camera = 1;
}

message ClientCameraRemove {
  string camera_id = 1;
}

message ClientCameraSwitch {
  string camera_id = 1;
}

message ClientCameraSelectedRequest {
  // Empty message, just a request
}

message ClientWebrtcSessionStart {
  // Empty message, just a request
}

message ClientWebrtcOffer {
  string sdp = 1;
}

message ClientWebrtcAnswer {
  string sdp = 1;
}

message ClientWebrtcIceCandidate {
  string candidate = 1;
  string sdp_mid = 2;
  int32 sdp_m_line_index = 3;
  string username_fragment = 4;
}

message ClientDeviceReboot {
  // Empty message, just a request
}

message ClientStatusRequest {
  // Empty message, just a request
}

message ClientModemInfoRequest {
  // Empty message, just a request
}

// Generic error
message Error {
  int32 code = 1;
  string message = 2;
  map<string, string> details = 3;
}
